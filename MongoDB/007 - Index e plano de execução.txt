Index e plano de execução

1. Mostrar todos os documentos da collection produto do banco de dados seu nome

 db.produto.find()
{ "_id" : 1, "nome" : "cpu i7", "qtd" : 15 }
{ "_id" : 2, "nome" : "memória ram", "qtd" : 10, "descricao" : { "armazenamento" : "8GB", "tipo" : "DDR4" } }
{ "_id" : 4, "nome" : "hd externo", "qtd" : 20, "descricao" : { "conexao" : "USB 3.0", "armazenamento" : "500GB", "sistema" : [ "Windows 10", "Windows 8", "Windows 7", "Linux" ] }, "data_modificacao" : ISODate("2022-06-12T16:15:10.139Z") }
{ "_id" : 3, "nome" : "mouse", "qtd" : 30, "descricao" : { "conexao" : "USB 3.0", "sistema" : [ "Windows 10", "Linux" ] }, "data_modificacao" : ISODate("2022-06-12T16:42:00.758Z"), "ts_modificacao" : Timestamp(1655053679, 1) }

2. Criar o index “query_produto” para pesquisar o campo nome do produto em ordem alfabética

db.produto.createIndex({query_produto:1})
{
        "numIndexesBefore" : 1,
        "numIndexesAfter" : 2,
        "createdCollectionAutomatically" : false,
        "ok" : 1
}

3. Pesquisar todos os índices da collection produto

db.produto.getIndexes()
[
        {
                "v" : 2,
                "key" : {
                        "_id" : 1
                },
                "name" : "_id_"
        },
        {
                "v" : 2,
                "key" : {
                        "query_produto" : 1
                },
                "name" : "query_produto_1"
        }
]

4. Pesquisar todos os documentos da collection produto

 db.produto.find()
{ "_id" : 1, "nome" : "cpu i7", "qtd" : 15 }
{ "_id" : 2, "nome" : "memória ram", "qtd" : 10, "descricao" : { "armazenamento" : "8GB", "tipo" : "DDR4" } }
{ "_id" : 4, "nome" : "hd externo", "qtd" : 20, "descricao" : { "conexao" : "USB 3.0", "armazenamento" : "500GB", "sistema" : [ "Windows 10", "Windows 8", "Windows 7", "Linux" ] }, "data_modificacao" : ISODate("2022-06-12T16:15:10.139Z") }
{ "_id" : 3, "nome" : "mouse", "qtd" : 30, "descricao" : { "conexao" : "USB 3.0", "sistema" : [ "Windows 10", "Linux" ] }, "data_modificacao" : ISODate("2022-06-12T16:42:00.758Z"), "ts_modificacao" : Timestamp(1655053679, 1) }
>

5. Visualizar o plano de execução do exercício 4

 db.produto.find().explain()
{
        "explainVersion" : "1",
        "queryPlanner" : {
                "namespace" : "heliton.produto",
                "indexFilterSet" : false,
                "parsedQuery" : {

                },
                "queryHash" : "8B3D4AB8",
                "planCacheKey" : "D542626C",
                "maxIndexedOrSolutionsReached" : false,
                "maxIndexedAndSolutionsReached" : false,
                "maxScansToExplodeReached" : false,
                "winningPlan" : {
                        "stage" : "COLLSCAN",
                        "direction" : "forward"
                },
                "rejectedPlans" : [ ]
        },
        "command" : {
                "find" : "produto",
                "filter" : {

                },
                "$db" : "heliton"
        },
        "serverInfo" : {
                "host" : "a9abf83931f7",
                "port" : 27017,
                "version" : "5.0.9",
                "gitVersion" : "6f7dae919422dcd7f4892c10ff20cdc721ad00e6"
        },
        "serverParameters" : {
                "internalQueryFacetBufferSizeBytes" : 104857600,
                "internalQueryFacetMaxOutputDocSizeBytes" : 104857600,
                "internalLookupStageIntermediateDocumentMaxSizeBytes" : 104857600,
                "internalDocumentSourceGroupMaxMemoryBytes" : 104857600,
                "internalQueryMaxBlockingSortMemoryUsageBytes" : 104857600,
                "internalQueryProhibitBlockingMergeOnMongoS" : 0,
                "internalQueryMaxAddToSetBytes" : 104857600,
                "internalDocumentSourceSetWindowFieldsMaxMemoryBytes" : 104857600
        },
        "ok" : 1
}

6. Pesquisar todos os documentos da collection produto, com uso da index “query_produto”

db.produto.find().hint({nome:1})
{ "_id" : 1, "nome" : "cpu i7", "qtd" : 15 }
{ "_id" : 4, "nome" : "hd externo", "qtd" : 20, "descricao" : { "conexao" : "USB 3.0", "armazenamento" : "500GB", "sistema" : [ "Windows 10", "Windows 8", "Windows 7", "Linux" ] }, "data_modificacao" : ISODate("2022-06-12T16:15:10.139Z") }
{ "_id" : 2, "nome" : "memória ram", "qtd" : 10, "descricao" : { "armazenamento" : "8GB", "tipo" : "DDR4" } }
{ "_id" : 3, "nome" : "mouse", "qtd" : 30, "descricao" : { "conexao" : "USB 3.0", "sistema" : [ "Windows 10", "Linux" ] }, "data_modificacao" : ISODate("2022-06-12T16:42:00.758Z"), "ts_modificacao" : Timestamp(1655053679, 1) }

7. Visualizar o plano de execução do exercício 7

db.produto.find().hint({nome:1}).explain()
{
        "explainVersion" : "1",
        "queryPlanner" : {
                "namespace" : "heliton.produto",
                "indexFilterSet" : false,
                "parsedQuery" : {

                },
                "queryHash" : "8B3D4AB8",
                "planCacheKey" : "D542626C",
                "maxIndexedOrSolutionsReached" : false,
                "maxIndexedAndSolutionsReached" : false,
                "maxScansToExplodeReached" : false,
                "winningPlan" : {
                        "stage" : "FETCH",
                        "inputStage" : {
                                "stage" : "IXSCAN",
                                "keyPattern" : {
                                        "nome" : 1
                                },
                                "indexName" : "query_produto",
                                "isMultiKey" : false,
                                "multiKeyPaths" : {
                                        "nome" : [ ]
                                },
                                "isUnique" : false,
                                "isSparse" : false,
                                "isPartial" : false,
                                "indexVersion" : 2,
                                "direction" : "forward",
                                "indexBounds" : {
                                        "nome" : [
                                                "[MinKey, MaxKey]"
                                        ]
                                }
                        }
                },
                "rejectedPlans" : [ ]
        },
        "command" : {
                "find" : "produto",
                "filter" : {

                },
                "hint" : {
                        "nome" : 1
                },
                "$db" : "heliton"
        },
        "serverInfo" : {
                "host" : "a9abf83931f7",
                "port" : 27017,
                "version" : "5.0.9",
                "gitVersion" : "6f7dae919422dcd7f4892c10ff20cdc721ad00e6"
        },
        "serverParameters" : {
                "internalQueryFacetBufferSizeBytes" : 104857600,
                "internalQueryFacetMaxOutputDocSizeBytes" : 104857600,
                "internalLookupStageIntermediateDocumentMaxSizeBytes" : 104857600,
                "internalDocumentSourceGroupMaxMemoryBytes" : 104857600,
                "internalQueryMaxBlockingSortMemoryUsageBytes" : 104857600,
                "internalQueryProhibitBlockingMergeOnMongoS" : 0,
                "internalQueryMaxAddToSetBytes" : 104857600,
                "internalDocumentSourceSetWindowFieldsMaxMemoryBytes" : 104857600
        },
        "ok" : 1
}

8. Remover o index “query_produto”

db.produto.dropIndex({nome:1})
{ "nIndexesWas" : 2, "ok" : 1 }

9. Pesquisar todos os índices da collection produto

 db.produto.getIndexes()
[ { "v" : 2, "key" : { "_id" : 1 }, "name" : "_id_" } ]

